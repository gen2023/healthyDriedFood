/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/*!********************************************************!*\
  !*** ./com_nevigen_audit/es6/administrator/orders.es6 ***!
  \********************************************************/
/*
 * @package    Nevigen Audit Package
 * @version    1.2.0
 * @author     Nevigen.com - https://nevigen.com
 * @copyright  Copyright Â© Nevigen.com. All rights reserved.
 * @license    Proprietary. Copyrighted Commercial Software
 * @link       https://nevigen.com
 */



window.NevigenAuditOrders = {
  changeStatus: (orderId, oldStatus, message, notify) => {
    let selectStatus = document.querySelector('select[name="select_status_id[' + orderId + ']"]'),
      inputNotify = document.querySelector('input[name="order_check_id[' + orderId + ']"]'),
      form = document.querySelector('form#adminForm');
    if (form && selectStatus) {
      let newStatus = parseInt(selectStatus.value);
      oldStatus = parseInt(oldStatus);
      if (oldStatus === newStatus) {
        alert(message);
        return false;
      }
      let inputOrderId = document.createElement('input');
      inputOrderId.type = 'hidden';
      inputOrderId.name = 'update_status[order_id]';
      inputOrderId.value = orderId;
      form.appendChild(inputOrderId);
      let inputOrderStatusOld = document.createElement('input');
      inputOrderStatusOld.type = 'hidden';
      inputOrderStatusOld.name = 'update_status[order_status_old]';
      inputOrderStatusOld.value = oldStatus;
      form.appendChild(inputOrderStatusOld);
      let inputOrderStatus = document.createElement('input');
      inputOrderStatus.type = 'hidden';
      inputOrderStatus.name = 'update_status[order_status]';
      inputOrderStatus.value = newStatus;
      form.appendChild(inputOrderStatus);
      if (inputNotify && inputNotify.checked || notify) {
        let inputNotify = document.createElement('input');
        inputNotify.type = 'hidden';
        inputNotify.name = 'update_status[notify]';
        inputNotify.value = 1;
        form.appendChild(inputNotify);
      }
      Joomla.submitbutton('orders.updateStatus');
    }
  },
  orderQuickView: (orderId, btn) => {
    if (!orderId || !btn) {
      return;
    }
    let box = document.querySelector('[data-order-quick-view-box="' + orderId + '"]');
    if (box) {
      box.style.display = '';
      return;
    }
    let ajaxData = new FormData();
    ajaxData.set('id', orderId);
    window.NevigenAuditOrders.sendAjax('orderQuickView', ajaxData).then(response => {
      if (response.data) {
        btn.insertAdjacentHTML('afterend', response.data);
      }
    }).catch(error => {
      console.error(error.message);
    });
  },
  sendAjax: (method, ajaxData) => {
    return new Promise((resolve, reject) => {
      if (!ajaxData || !method) {
        reject('Error ajax data');
        return false;
      }
      ajaxData.set('task', 'orders.' + method);
      let form = document.querySelector('#adminForm');
      if (!form) {
        reject('Error get form action');
        return false;
      }
      Joomla.request({
        url: form.getAttribute('action'),
        method: 'POST',
        data: ajaxData,
        onSuccess: resp => {
          let response;
          try {
            response = JSON.parse(resp);
          } catch (error) {
            throw new Error('Failed to parse JSON');
          }
          if (response && response.success === true) {
            resolve(response);
          } else {
            reject(response);
          }
        },
        onError: resp => {
          let response;
          try {
            response = JSON.parse(resp.response);
          } catch (error) {
            throw new Error('Failed to parse JSON');
          }
          reject(response);
        }
      });
    });
  }
};
document.addEventListener('DOMContentLoaded', () => {
  let orderQuickView = document.querySelectorAll('[data-order-quick-view]');
  if (orderQuickView.length > 0) {
    orderQuickView.forEach(btn => {
      let id = btn.getAttribute('data-order-quick-view');
      if (id) {
        btn.addEventListener('mouseenter', e => {
          window.NevigenAuditOrders.orderQuickView(id, btn);
        });
        btn.addEventListener('mouseleave', () => {
          let boxes = document.querySelectorAll('[data-order-quick-view-box]');
          if (boxes.length > 0) {
            boxes.forEach(box => {
              box.style.display = 'none';
            });
          }
        });
      }
    });
  }
});
/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,